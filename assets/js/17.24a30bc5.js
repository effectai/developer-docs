(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{406:function(e,t,a){"use strict";a.r(t);var s=a(54),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"local-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-deployment"}},[e._v("#")]),e._v(" Local Deployment")]),e._v(" "),a("p",[e._v("This documentation is intended for local development and testing.")]),e._v(" "),a("h1",{attrs:{id:"quick-and-easy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quick-and-easy"}},[e._v("#")]),e._v(" Quick and Easy")]),e._v(" "),a("p",[e._v("The quick and easy way is to use the local deployment scripts provided at "),a("a",{attrs:{href:"https://github.com/effectai/effect-network/tree/master/scripts",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub.com/effectai/effect-network/scripts"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h1",{attrs:{id:"detailed-instructions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#detailed-instructions"}},[e._v("#")]),e._v(" Detailed Instructions")]),e._v(" "),a("p",[e._v("The first is getting started with EOS, which is the blockchain where the smart contract logic is deployed.\nSo we need to run a local network, retrieve the contracts and deploy them locally.")]),e._v(" "),a("p",[e._v("The second part of this guide will look at deploying the frontend interacting with the smart contract. Primarily this will be the worker interface. But there are features built-in as well for requesters.")]),e._v(" "),a("p",[e._v("The third part will focus on deploying the relayer; this is the interface between the BSC blockchain and the eos blockchain.\nThis reminds me that we might need to look into deploying a BSC testnet as well, or we'll need to look at using an existing one.\nIt feels kind of silly to deploy a new blockchain for every new project.")]),e._v(" "),a("h2",{attrs:{id:"eos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eos"}},[e._v("#")]),e._v(" EOS")]),e._v(" "),a("p",[e._v("EOS is where the smart contract logic will be deployed, so we'll focus on this step first.")]),e._v(" "),a("h3",{attrs:{id:"eosio-binaries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eosio-binaries"}},[e._v("#")]),e._v(" EOSIO Binaries")]),e._v(" "),a("p",[e._v("First we'll need to install the eosio binaries in order to run the local network and a client in order to interact with the network.\nAt the following link, you can find instructions on how to build it for your specific platform.\nhttps://developers.eos.io/manuals/eos/v2.0/install/install-prebuilt-binaries")]),e._v(" "),a("p",[e._v("Now you should be able to run "),a("code",[e._v("cleos")]),e._v(" and "),a("code",[e._v("keosd")]),e._v(" locally, which allows you to interact with your local version of the eos blockchain.")]),e._v(" "),a("h3",{attrs:{id:"eos-wallet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eos-wallet"}},[e._v("#")]),e._v(" EOS Wallet")]),e._v(" "),a("p",[e._v("This step is important, as it allows us to deploy the smart contract in a bit to the blockchain.\nFollow this guide in order to create a wallet with the key pair.")]),e._v(" "),a("p",[e._v("Create a local wallet, save the password in the "),a("code",[e._v("local.wallet")]),e._v(" file. Afterwards you can use this password to unlock the wallet.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos wallet create --file default.wallet \n")])])]),a("p",[e._v("Open wallet and unlock")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos wallet "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v("\ncleos wallet unlock --password "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" local.wallet"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])])]),a("h3",{attrs:{id:"run-the-eos-local-testnet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-the-eos-local-testnet"}},[e._v("#")]),e._v(" Run the EOS Local Testnet")]),e._v(" "),a("p",[e._v("To run a local testnet, the following command will be used. using the "),a("code",[e._v("chain-api-plugin")]),e._v(" and "),a("code",[e._v("history-api-plugin")]),e._v(" which will allow us to interact with the blockchain and use a blockchain explorer.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("nodeos "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n-e -p eosio "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--plugin eosio::chain_api_plugin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--plugin eosio::history_api_plugin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--data-dir ~/.local/share/eosio/nodeos_local "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--access-control-allow-origin"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--access-control-allow-headers"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--http-validate-host"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("false "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--delete-all-blocks "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" nodeos.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("2")]),e._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("&1")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" \n")])])]),a("p",[e._v("Check to see if nodeos is running at "),a("code",[e._v("localhost:8888")]),e._v(".\nYou can check the "),a("code",[e._v("nodeos.log")]),e._v(" file to see if there are any new blocks being produced or use one of the following commands to see the current block number.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos get info\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Or")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" http://localhost:8888/v1/chain/get_info\n")])])]),a("p",[e._v("When you want to stop the nodeos process, you can use the following command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("pkill")]),e._v(" nodeos\n")])])]),a("p",[a("a",{attrs:{href:"https://developers.eos.io/welcome/latest/getting-started-guide/local-development-environment/development-wallet",target:"_blank",rel:"noopener noreferrer"}},[e._v("Local Wallet"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"importing-eosio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#importing-eosio"}},[e._v("#")]),e._v(" Importing EOSIO")]),e._v(" "),a("p",[e._v("A default system account is provided when you instantiate a new local blockchain, "),a("code",[e._v("eosio")]),e._v(" is the name of the account. The private key for this account is the following:\n"),a("code",[e._v("5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3")])]),e._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("This key is used as a default for EOSIO development and should never be used for anything but local development!")])]),e._v(" "),a("p",[e._v("Import this account into your local eos client:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos wallet "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("import")]),e._v(" --private-key 5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3\n")])])]),a("p",[e._v("Reference\nhttps://developers.eos.io/welcome/latest/smart-contract-guides/before-you-begin/running-a-blockchain")]),e._v(" "),a("p",[e._v("So now we managed to spin up our local eos blockchain and import the keys to the wallet. The next steps are to figure out accounts and permissions. Later we can continue to the deployment of the contracts.")]),e._v(" "),a("p",[e._v("After we have imported the EOSIO account, we can create a new account for the contract.\nWe will need a new account for each contract.")]),e._v(" "),a("h2",{attrs:{id:"creating-an-eos-accounts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-an-eos-accounts"}},[e._v("#")]),e._v(" Creating an EOS accounts")]),e._v(" "),a("p",[e._v("Now that the main EOSIO account has been imported into our local wallet, and we have the local EOSIO blockchain running. We can start making accounts for each contract so that we can push our contracts to each of them.")]),e._v(" "),a("p",[e._v("Create an account for the contract using the key of the eosio account, using the key for the "),a("code",[e._v("eosio")]),e._v(" account.")]),e._v(" "),a("h4",{attrs:{id:"_1-effect-force"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-effect-force"}},[e._v("#")]),e._v(" 1. effect.force")]),e._v(" "),a("p",[e._v("Effect Network contract with core functionalities for campaigns and tasks.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos create account eosio effect.force EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\n")])])]),a("h4",{attrs:{id:"_2-effect-accnt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-effect-accnt"}},[e._v("#")]),e._v(" 2. effect.accnt")]),e._v(" "),a("p",[e._v("Effect Network virtual account system.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos create account eosio effect.accnt EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\n")])])]),a("h4",{attrs:{id:"_3-effect-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-effect-token"}},[e._v("#")]),e._v(" 3. effect.token")]),e._v(" "),a("p",[e._v("Effect Network token used for paying for tasks.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos create account eosio effect.token EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\n")])])]),a("h4",{attrs:{id:"_4-effect-relay"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-effect-relay"}},[e._v("#")]),e._v(" 4. effect.relay")]),e._v(" "),a("p",[e._v("This is needed for the relayer account for the EOS <=> BSC relayer")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos create account eosio effect.relay EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\n")])])]),a("p",[e._v("Now we should be able to push the contract to the newly created address.")]),e._v(" "),a("h2",{attrs:{id:"downloading-the-smart-contract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#downloading-the-smart-contract"}},[e._v("#")]),e._v(" Downloading the Smart Contract")]),e._v(" "),a("p",[e._v("For this guide, we'll focus on downloading the contracts in WASM and ABI formats from the blockchain and deploying them locally. That way, we won't need to deal with compiling the contracts, making it easier to use the most up-to-date contracts.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" effect.force effect.token effect.accnt\n")])])]),a("ol",[a("li",[e._v("Force Contract - efxforce1111")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos --url https://jungle3.greymass.com get code efxforce1111 --wasm -c force/effect.force.wasm -a force/effect.force.abi\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Token Contract - efxtoken1112")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos --url https://jungle3.greymass.com get code efxtoken1112 --wasm -c token/effect.token.wasm -a token/effect.token.abi\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("Account Contract - efxaccount11")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos --url https://jungle3.greymass.com get code efxaccount11 --wasm -c account/effect.accnt.wasm -a account/effect.accnt.abi\n")])])]),a("p",[a("a",{attrs:{href:"https://developers.eos.io/manuals/eos/v2.1/cleos/how-to-guides/how-to-connect-to-a-specific-network",target:"_blank",rel:"noopener noreferrer"}},[e._v("Connecting to Specific Chain"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://developers.eos.io/manuals/eos/v2.1/cleos/how-to-guides/how-to-connect-to-a-specific-network",target:"_blank",rel:"noopener noreferrer"}},[e._v("Get Code"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"deploying-the-smart-contracts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-the-smart-contracts"}},[e._v("#")]),e._v(" Deploying the Smart Contracts")]),e._v(" "),a("p",[e._v("Now that we have the contracts, we can start looking at deploying them to the local chain.")]),e._v(" "),a("ol",[a("li",[e._v("Force Contract - effect.force")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos --url http://localhost:8888 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" contract effect.force effect.force --abi effect.force.abi -p effect.force@active\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Token Contract - effect.token")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos --url http://localhost:8888 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" contract effect.token effect.token --abi effect.token.abi -p effect.token@active\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("Account Contract - effect.accnt")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos --url http://localhost:8888 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" contract effect.accnt effect.accnt --abi effect.accnt.abi -p effect.accnt@active\n")])])]),a("h2",{attrs:{id:"pushing-eos-actions-to-get-the-rube-goldberg-machine-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pushing-eos-actions-to-get-the-rube-goldberg-machine-started"}},[e._v("#")]),e._v(" Pushing EOS actions to get the Rube Goldberg machine started.")]),e._v(" "),a("p",[e._v("Initialize the effect.force contract.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos push action effect.force init "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'[ \"effect.accnt\" ]'")]),e._v(" -p effect.force@active\n")])])]),a("p",[e._v("Create a v-account for the relayer and for effect.admin")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos push action effect.accnt "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{ "acc": ["name", "effect.force"], "symbol": { "contract": "effect.token", "sym": "4,EFX" }, "payer": "eosio" }\'')]),e._v(" -p eosio@active\n\ncleos push action effect.accnt "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{ "acc": ["name", "effect.admin"], "symbol": { "contract": "effect.token", "sym": "4,EFX" }, "payer": "eosio" }\'')]),e._v(" -p eosio@active\n\n")])])]),a("p",[e._v("Create the token supply.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos push action effect.token create "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'[ "effect.admin", "1000000.0000 EFX" ]\'')]),e._v(" -p effect.token@active\ncleos push action effect.token issue "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'[ "effect.admin", "50000.0000 EFX", "m" ]\'')]),e._v(" -p effect.admin@active\n")])])]),a("h2",{attrs:{id:"sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sdk"}},[e._v("#")]),e._v(" SDK")]),e._v(" "),a("p",[e._v("Clone the SDK and "),a("code",[e._v("cd")]),e._v(" into it. Change the SignatureProvider for the local environment with the private_key for your relayer account.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/effectai/effect-js\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" effect-js\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n")])])]),a("p",[e._v("Find the "),a("code",[e._v(".env.development")]),e._v(" file and uncomment the "),a("code",[e._v("local")]),e._v(" section of the "),a("code",[e._v("NUXT_ENV")]),e._v(" variables and comment out other sections.\nNow build the SDK so that the local version of the frontend can interact with the local blockchain.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run build:cjs\n")])])]),a("h2",{attrs:{id:"relayer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#relayer"}},[e._v("#")]),e._v(" Relayer")]),e._v(" "),a("p",[e._v("Clone the GitHub and start the relayer, install the dependencies and then start the relayer using local configuration.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/effectai/vaccount-relayer\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" vaccount-relayer\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" \nnode index.js "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("local")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("\n")])])]),a("h2",{attrs:{id:"frontend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontend"}},[e._v("#")]),e._v(" FrontEnd")]),e._v(" "),a("p",[e._v("Clone and start up the Force-Frontend. The force frontend will display information about campaigns and tasks.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/effectai/force-frontend-new\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" force-frontend-new\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" .env.development\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" .env.local.development .env.development\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("link")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("/path/to/effect-js\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run dev\n")])])]),a("h2",{attrs:{id:"get-funds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-funds"}},[e._v("#")]),e._v(" Get Funds")]),e._v(" "),a("p",[e._v("In order to do transactions on the local network, we need to send ourselves some EFX. This is not required for all actions but is required for making batches, for example.")]),e._v(" "),a("p",[e._v("Using the frontend, you can register a new account, use the generated account name in order to send yourself funds  using the following command (remebmer to unlock your wallet):")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cleos push action effect.token transfer "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'["effect.admin", "effect.accnt", "1000.0000 EFX", "<YOUR_EFFECT_ACCOUNT_ID>"]\'')]),e._v(" -p effect.admin@active\n")])])]),a("h1",{attrs:{id:"local-blockchain-explorer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-blockchain-explorer"}},[e._v("#")]),e._v(" Local Blockchain explorer.")]),e._v(" "),a("p",[e._v("You'll be able to use the local blockchain explorer to see the transactions that have been made on the local blockchain. Go to "),a("a",{attrs:{href:"https://local.bloks.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("local.bloks.io"),a("OutboundLink")],1),e._v(" and using the default provided values, you can see the transactions that have been made on the local blockchain.")]),e._v(" "),a("h2",{attrs:{id:"conclusion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[e._v("#")]),e._v(" Conclusion")]),e._v(" "),a("p",[e._v("Congratulations, we now have a local version of all the main components to run Effect Network! It is now possible to make campaigns, create batches, make tasks, pay for the tasks and get paid doing the tasks.")])])}),[],!1,null,null,null);t.default=n.exports}}]);