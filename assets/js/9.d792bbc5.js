(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{381:function(t,a,s){t.exports=s.p+"assets/img/template.06a83b21.png"},400:function(t,a,s){"use strict";s.r(a);var n=s(51),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"effect-network"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#effect-network"}},[t._v("#")]),t._v(" Effect Network")]),t._v(" "),n("h2",{attrs:{id:"template"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#template"}},[t._v("#")]),t._v(" Template")]),t._v(" "),n("p",[t._v("A template is simply some vanilla HTML that has a placeholder value that will be replaced with data when it is presented to the worker as a task. That's a bit of a mouthful; let's break it down.")]),t._v(" "),n("p",[t._v("Let's imagine we have an image classification campaign; we want to identify if there are cats in the picture. We present a picture to the worker, and it is their task to identify what is in the picture. They see an image and are provided a list of options to choose from.")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Placeholder")]),t._v(" "),n("p",[t._v("Note the use of "),n("code",[t._v("${image_url}")]),t._v(" in the template.")]),t._v(" "),n("p",[t._v("This is the variable that will be replaced by the array of data that is provided later on.\nSo later, the placeholder will be filled with "),n("code",[t._v("https://i.imgur.com/NP3BDFD.jpg")]),t._v(" and rendered as the template below.\nOf course, you can pass any "),n("code",[t._v("image_url")]),t._v(" that you choose; in this quickstart guide, we will be looking at how to use IPFS.")])]),t._v(" "),n("p",[t._v("This is a template:")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("image")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("${image_url}"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Image Classification"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("option")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("submit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button-answer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":options")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("["),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("Cat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("Dog"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("Mechanical Turk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("Other"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("]"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("label")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("What do you see in the picture above?"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("option")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("The template will render into the following image:\n"),n("img",{attrs:{src:s(381),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"account"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#account"}},[t._v("#")]),t._v(" Account")]),t._v(" "),n("p",[t._v("Something here about dragons and accounts.")]),t._v(" "),n("h2",{attrs:{id:"creating-an-effect-account"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creating-an-effect-account"}},[t._v("#")]),t._v(" Creating an Effect Account")]),t._v(" "),n("p",[t._v("Before you can publish campaigns on Effect Network, you need to create an account. This example will demonstrate how to do that using a virtual account.")]),t._v(" "),n("p",[t._v("Create an account so you can start making transactions on the Effect Network. This way, you can pay for creating the campaigns and running them.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("openAccount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tree_friend'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVAccountByName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tree_friend'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"get-money-ðŸ’¸"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#get-money-ðŸ’¸"}},[t._v("#")]),t._v(" Get Money ðŸ’¸")]),t._v(" "),n("p",[t._v("Now that you have created an account, you will need to load up your account with EFX. As we are building on our app on testnet, we will need to get testnet EFX (called: UTL). Join our Discord server, join the hackathon channel and request EFX (UTL) from the Discord-bot ðŸ¤–.")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Join to access the EFX Faucet")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://discord.gg/WsPVmaVhu3",target:"_blank",rel:"noopener noreferrer"}},[t._v("Join Discord "),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"check-balance"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#check-balance"}},[t._v("#")]),t._v(" Check balance")]),t._v(" "),n("p",[t._v("After you have used the faucet to get your tokens, you will be able to get your account balance, make withdrawals and do transfers.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// from account, to vaccount, amount in EFX")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" account "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVAccountByName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" balance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPendingBalance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("account"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// from vaccount, to account, amount in EFX")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("withdraw")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'from_vaccount_name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'to_account_name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1.0000'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// from vaccount, to vaccount, amount in EFX")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" sdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vtransfer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'from_vaccount_name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'to_vaccount_name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1.0000'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"campaign-this-piece-needs-to-be-rewritten"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#campaign-this-piece-needs-to-be-rewritten"}},[t._v("#")]),t._v(" Campaign --- this piece needs to be rewritten.")]),t._v(" "),n("p",[t._v("The next step now is to create the campaign object. This campaign object contains essential information such as; what kind of campaign it is, which template is used, and how much workers are rewarded. When the campaign object is uploaded to an IPFS service, retrieve your hash. This hash is used to create the campaign. Storing data directly on the blockchain is possible, but it is costly; thus, for now, we will be using the method. That way the campaign data is not stored on the blockchain itself but can be easily referenced from the smart contract and your dApps.")]),t._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("EFFECT NETWORK INTERNAL")]),t._v(" "),n("p",[t._v("Figure out how to pass the template string with the "),n("code",[t._v("place_holder")]),t._v(" value elegantly.\nAt the moment, the "),n("code",[t._v("place_holder")]),t._v(" is appended to the template string.")])])])}),[],!1,null,null,null);a.default=e.exports}}]);